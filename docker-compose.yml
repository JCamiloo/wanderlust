services:
  prometheus:
    image: prom/prometheus:v2.45.3
    restart: unless-stopped
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - --web.enable-remote-write-receiver
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
  node-exporter:
    image: prom/node-exporter:v1.7.0
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
  alertmanager:
    image: prom/alertmanager:v0.27.0
    restart: unless-stopped
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - 9093:9093
  grafana:
    image: grafana/grafana:10.4.0
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
  mongo:
    image: mongo:8.0.3-noble
    container_name: mongo
    ports:
      - 27017:27017
    volumes:
      - ./mongo_data:/data/db
  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: mongo-express
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://mongo:27017
      - ME_CONFIG_OPTIONS_EDITORTHEME=ambiance
      - ME_CONFIG_BASICAUTH_USERNAME=user
      - ME_CONFIG_BASICAUTH_PASSWORD=pass
    depends_on:
      - mongo

  redis:
    image: redis:alpine3.20
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - ./redis_data:/data

  front:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - 5173:5173
    env_file:
      - ./frontend/.env
    depends_on:
      - back

  back:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - 8080:8080
    env_file:
      - ./backend/.env
    depends_on:
      - mongo
      - redis
